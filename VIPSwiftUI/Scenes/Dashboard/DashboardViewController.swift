//
//  CounterViewController.swift
//  CleanSwiftUI
//
//  Created by Siradanai.s on 30/6/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftUI

protocol DashboardDisplayLogic: AnyObject {
    func displayCategory(categoryItems: [CategoryRowViewModel])
    func displayTapCategory(viewModel: Dashboard.TapCategory.ViewModel)
}

class DashboardViewController: BaseUIViewController, DashboardDisplayLogic {
    
    private let viewModel = DashboardSceneViewModel(categoryItems: [])
    var interactor: DashboardInteractor!
    var presenter: DashboardPresenter!
    var router: DashboardRoutingLogic!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.title = "Dashboard"
        
        setupVIP()
        
        loadSwiftUIView(
            DashboardScreenSwiftUIView(
                interactor: interactor,
                viewModel: viewModel
            )
        )
        
        interactor.fetchCateogory(request: .init())
    }

    func displayCategory(categoryItems: [CategoryRowViewModel]) {
        viewModel.categoryItems = categoryItems
    }
    
    func displayTapCategory(viewModel: Dashboard.TapCategory.ViewModel) {
        router.routeToHealthDetail(type: viewModel.categoryType)
    }
}

private extension DashboardViewController {
    func setupVIP() {
        router = DashboardRouter(viewController: self)
        
        presenter = DashboardPresenter(
            viewController: self
        )
        
        interactor = DashboardInteractor(presenter: presenter)
    }
}

struct DashboardScreenSwiftUIView: View {
    var interactor: DashboardInteractor?
    @ObservedObject var viewModel: DashboardSceneViewModel
    
    var body: some View {
        List(viewModel.categoryItems, id: \.category) { category in
            CategoryRow(
                viewModel: category
            ).onPress {
                print("### DEBUG tap")
                interactor?.tapCategory(request: .init(categoryType: category.category))
            }
        }
    }
}

fileprivate let categoryViewModel: [CategoryRowViewModel] = [
    .init(
        title: "Weight",
        value: "84 kg",
        lastUpdated: Date().toString(),
        category: .weight
    ),
    .init(
        title: "Body Mass Index",
        value: "21",
        lastUpdated: Date().toString(),
        category: .bodyMassIndex
    ),
]

struct DashboardScreenSwiftUIView_Previews: PreviewProvider {
    static var previews: some View {
        DashboardScreenSwiftUIView(
            interactor: nil,
            viewModel: .init(categoryItems: categoryViewModel)
        )
    }
}
